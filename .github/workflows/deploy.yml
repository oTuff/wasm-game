name: Deploy
on:
  push:
    branches: main
  pull_request:
    branches: main

permissions:
  contents: read
  pull-requests: read

jobs:
  build_go:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./go-ebitengine
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.24
          cache-dependency-path: go-ebitengine/go.sum

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt install -y libc6-dev libgl1-mesa-dev libxcursor-dev libxi-dev libxinerama-dev libxrandr-dev libxxf86vm-dev libasound2-dev pkg-config

      - name: Install Dependencies
        run: go mod tidy

      - name: Build WASM
        run: make build

      - name: Upload wasm file
        uses: actions/upload-artifact@v4
        with:
          name: game-wasm
          path: go-ebitengine/public/game.wasm

  build_rust:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./rust-bevy
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: Swatinem/rust-cache@v2
        with:
          save-if: ${{ github.ref == 'refs/heads/main' }}
          cache-all-crates: true
          workspaces: rust-bevy

      - name: Set up Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Install latest binaryen (wasm-opt)
        run: |
          wget https://github.com/WebAssembly/binaryen/releases/download/version_123/binaryen-version_123-x86_64-linux.tar.gz
          tar -xzf binaryen-version_123-x86_64-linux.tar.gz
          sudo cp binaryen-version_123/bin/wasm-opt /usr/local/bin/

      - name: Install wasm-pack
        run: curl -sSfL https://rustwasm.github.io/wasm-pack/installer/init.sh | sh -s -- -y

      - name: Build with wasm-pack
        run: make build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wasm-pack
          path: rust-bevy/public/pkg

  build_lua:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./lua-love2d
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Build game with love.js
        run: make build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: lua_wasm
          path: |
            lua-love2d/public/love.wasm
            lua-love2d/public/game.data

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: [build_go, build_rust, build_lua]
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download go wasm file
        uses: actions/download-artifact@v4
        with:
          name: game-wasm
          path: ./go-ebitengine/public

      - name: Download rust wasm file
        uses: actions/download-artifact@v4
        with:
          name: wasm-pack
          path: ./rust-bevy/public/pkg

      - name: Download lua wasm and data files
        uses: actions/download-artifact@v4
        with:
          name: lua_pack
          path: ./lua-love2d/public/

      - name: Install Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Upload to Deno Deploy
        uses: denoland/deployctl@v1
        with:
          project: "otuff-wasm-game-36"
          entrypoint: "server.tsx"
          root: "."
